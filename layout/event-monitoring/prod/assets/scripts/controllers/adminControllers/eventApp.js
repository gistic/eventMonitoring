var eventApp=angular.module("eventApp",[]);eventApp.controller("EventMainController",["$rootScope","$scope","$http","$location","$window","$anchorScroll","$state","$timeout","RequestData","RequestViewsLayoutData","CreateEventSource",function($rootScope,$scope,$http,$location,$window,$anchorScroll,$state,$timeout,RequestData,RequestViewsLayoutData,CreateEventSource){$scope.preventDefault=function($event){$event.preventDefault()},$rootScope.eventID=$location.search().uuid,$scope.eventID=$location.search().uuid,$rootScope.getViewOptions=function(){var requestAction="GET",apiUrl="/api/events/"+$rootScope.eventID+"/config",requestData="";RequestData.fetchData(requestAction,apiUrl,requestData).success(function(response){$rootScope.keywords=response.hashtags,$rootScope.userColor=response.backgroundColor,$rootScope.userSize=response.size,$scope.showRetweets=response.retweetEnabled,$scope.enableModeration=response.moderated}).error(function(){})},$rootScope.getViewOptions(),$scope.moderationStatus=function(){if(0==$scope.enableModeration)var requestAction="DELETE";else var requestAction="PUT";var apiUrl="/api/events/"+$rootScope.eventID+"/moderation",requestData="";RequestData.fetchData(requestAction,apiUrl,requestData).success(function(response){}).error(function(){console.log("#")})},$scope.retweetsStatus=function(){if(0==$scope.showRetweets)var requestAction="DELETE";else var requestAction="PUT";var apiUrl="/api/events/"+$rootScope.eventID+"/retweets",requestData="";RequestData.fetchData(requestAction,apiUrl,requestData).success(function(response){}).error(function(){console.log("#")})},$rootScope.getEventStats=function(){var requestAction="GET",apiUrl="/api/events/"+$rootScope.eventID+"/basicStats",requestData="";RequestData.fetchData(requestAction,apiUrl,requestData).success(function(response){$scope.numberOfUsers=response.numberOfUsers,$rootScope.totalTweetsFromServer=response.totalTweets,$scope.totalRetweets=response.totalRetweets,$scope.startTime=response.startTime;var myDate=new Date($scope.startTime);$scope.startTimeMilliseconds=myDate.getTime()}).error(function(){console.log("#")})},$rootScope.getEventStats(),$scope.$watch("layoutScreens|filter:{selected:true}",function(nv,ov,scope){$rootScope.userScreens=[],angular.forEach(nv,function(value,key){1==value.selected&&this.push(value.value)},$rootScope.userScreens)},!0),$scope.goLive=function(){$window.open($rootScope.baseUrl+"/event-monitoring/views/presentation/#/live?uuid="+$rootScope.eventID,"_blank")},$rootScope.userColor=RequestViewsLayoutData.userColor(),$rootScope.userSize=RequestViewsLayoutData.userSize(),$scope.eventStarted=!1,$rootScope.timerRunning=!1,$scope.tweetsQueue=[],$scope.onHoldTweets=[],$scope.tweet={},$scope.tweetsCount=0,$scope.startEventSource=function(){$scope.eventSourceUrl=$rootScope.baseUrl+"/api/events/"+$rootScope.eventID+"/adminEventSource";var source=new EventSource($scope.eventSourceUrl);source.addEventListener("tweet",function(response){$scope.tweet=JSON.parse(response.data),$scope.$apply(function(){$scope.tweetsQueue.length<=1?$scope.tweetsQueue.push($scope.tweet):$scope.onHoldTweets.unshift($scope.tweet),$scope.tweetsCount=$rootScope.totalTweetsFromServer+$scope.tweetsQueue.length},!1)}),source.addEventListener("new-admin-opened",function(response){source.close()})},$scope.startEventSource(),$scope.pagesShown=1,$scope.pageSize=20,$scope.tweetsQueueLimit=function(){return $scope.pageSize*$scope.pagesShown},$scope.loadMoreButton=function(){return $scope.pagesShown<$scope.tweetsCount/$scope.pageSize},$scope.loadMoreTweets=function(){$location.hash("toApproveDiv"),$anchorScroll()},$scope.loadMoreTweets=function(){$scope.onHoldTweets.forEach(function(tweet,i){$scope.tweetsQueue}),$scope.lastNewTweets=[],$scope.remainingTweetsCount=$scope.tweetsQueueLength-$scope.pageSize*$scope.pagesShown},$scope.removedTweetsCount=0,$scope.removeTweet=function(e,$index){var tweetId=$(e.currentTarget).parent().parent().parent().attr("id"),tweetIndex=$(e.currentTarget).attr("data-id"),eventID=$rootScope.eventID,requestAction="POST",apiUrl="/api/events/"+eventID+"/blockedTweets/"+tweetId,requestData="";RequestData.fetchData(requestAction,apiUrl,requestData).success(function(response){$scope.tweetsQueue.splice(tweetIndex,1),$scope.removedTweetsCount++}).error(function(){console.log("#")})},$scope.approvedTweetsCount=0,$scope.approveTweet=function(e,$index){var tweetId=$(e.currentTarget).parent().parent().parent().attr("id"),tweetIndex=$(e.currentTarget).attr("data-id"),eventID=$rootScope.eventID,requestAction="POST",apiUrl="/api/events/"+eventID+"/approvedTweets/"+tweetId,requestData="";RequestData.fetchData(requestAction,apiUrl,requestData).success(function(response){$scope.tweetsQueue.splice(tweetIndex,1),$scope.approvedTweetsCount++}).error(function(error){console.log(error)})},$scope.approveStarred=function(e,$index){var tweetId=$(e.currentTarget).parent().parent().parent().attr("id"),tweetIndex=$(e.currentTarget).attr("data-id"),eventID=$rootScope.eventID,requestAction="POST",apiUrl="/api/events/"+eventID+"/approvedTweets/"+tweetId+"?starred=true",requestData="";RequestData.fetchData(requestAction,apiUrl,requestData).success(function(response){$scope.tweetsQueue.splice(tweetIndex,1),$scope.approvedTweetsCount++}).error(function(){console.log("#")})},$scope.approveAllTweets=function(){var eventID=$rootScope.eventID,requestAction="POST",apiUrl="/api/events/"+eventID+"/approvedTweets/all",requestData="";RequestData.fetchData(requestAction,apiUrl,requestData).success(function(response){$scope.tweetsQueue=[]}).error(function(){console.log("#")})},$scope.updateViewOptions=function(userColor,userSize,userScreen){var eventID=$rootScope.eventID,requestAction="PUT",apiUrl="/api/events/"+eventID+"/config",userColor=RequestViewsLayoutData.userColor(),userSize=RequestViewsLayoutData.userSize(),userScreen=RequestViewsLayoutData.userScreen(),requestData={backgroundColor:userColor,screens:userScreen,screenTimes:[7e4,5e4,3e4],size:userSize};RequestData.fetchData(requestAction,apiUrl,requestData).then(function(response){console.log("Options Updated")})},$scope.updateBlockedUsers=function(e,screenName,userPicture,userID){var requestAction="PUT",apiUrl="/api/events/"+$rootScope.eventID+"/blockedUsers/"+screenName,requestData="",notification=new NotificationFx({message:'<div class="ns-thumb"><img src="'+userPicture+'"/></div><div class="ns-content"><p><a href="#">"'+screenName+"</a> haven been added to blocked users list.</p></div>",layout:"other",ttl:3e3,effect:"thumbslider",type:"error"});RequestData.fetchData(requestAction,apiUrl,requestData).then(function(response){notification.show();var tweetQueueWithoutBlocked=[];angular.forEach($scope.tweetsQueue,function(tweet){tweet.user.id!=userID&&tweetQueueWithoutBlocked.push(tweet)}),$scope.tweetsQueue=tweetQueueWithoutBlocked})},$scope.updateTrustedUsers=function(e,screenName,userPicture,userID){var requestAction="PUT",apiUrl="/api/events/"+$rootScope.eventID+"/trustedUsers/"+screenName,requestData="",notification=new NotificationFx({message:'<div class="ns-thumb"><img src="'+userPicture+'"/></div><div class="ns-content"><p><a href="#">"'+screenName+"</a> haven been added to trusted users list.</p></div>",layout:"other",ttl:3e3,effect:"thumbslider",type:"success"});RequestData.fetchData(requestAction,apiUrl,requestData).then(function(response){notification.show(),$scope.tweetQueueWithoutTrusted=[],angular.forEach($scope.tweetsQueue,function(tweet){tweet.user.id!=userID&&$scope.tweetQueueWithoutTrusted.push(tweet)}),$scope.tweetsQueue=$scope.tweetQueueWithoutTrusted})},$scope.stopEventHandler=function(){var notification=new NotificationFx({message:"<p>Hello there! Your event have been stoped.</p>",layout:"growl",ttl:3e3,effect:"genie",type:"notice"});$scope.eventStarted=!1,$scope.$broadcast("timer-stop"),$rootScope.timerRunning=!1,notification.show(),$state.transitionTo("home")}}]);