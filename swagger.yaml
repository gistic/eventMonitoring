swagger: "2.0"
info:
  title: TwitterBoard API
  description: API for TwiiterBoard event manager
  version: 1.0.0
host: tweetboard.com
schemes:
  - http
basePath: /v1
produces:
  - application/json
paths:
  /events:
    post:
      summary: Create an event
      description: Creates an event.
      tags:
        - Event
      parameters:
        - name: hashtags
          in: body
          description: Tags to filter by
          schema:
            type: array
            items:
              type: string
          required: true
      responses:
        "200":
          description: Event created
          schema:
            $ref: "#/definitions/event"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
  "/events/{uuid}":
    delete:
      description: deletes a single pet based on the ID supplied
      operationId: deletePet
      tags:
        - Event
      parameters:
        - name: uuid
          in: path
          description: ID of event to delete
          required: true
          type: string
      responses:
        "204":
          description: event deleted
        default:
          description: unexpected error
          schema:
            $ref: "#/definitions/Error"
  "/events/{id}/trustedUsers":
    get:
      summary: Get list of trusted users for the given event
      tags:
        - trusted users
      parameters:
        - name: id
          in: path
          description: ID of the event for which to get the trusted users.
          required: true
          type: string
      responses:
        "200":
          description: An array of trusted users
          schema:
            type: array
            items:
              $ref: "#/definitions/twitterUser"
  "/events/{id}/trustedUsers/{screenName}":
    put:
      summary: Add trusted user(s)
      tags:
        - trusted users
      parameters:
        - name: id
          in: path
          description: ID of the event.
          required: true
          type: string
        - name: screenName
          in: path
          description: Screen name of the twitter user.
          required: true
          type: number
      responses:
        "200":
          description: successful operation
    delete:
      tags:
        - trusted users
      summary: Delete purchase order by ID
      description: For valid response try integer IDs with value < 1000. Anything above 1000 or nonintegers will generate API errors
      operationId: deleteOrder
      produces:
        - application/json
        - application/xml
      parameters:
        - name: id
          in: path
          description: ID of the event.
          required: true
          type: string
        - name: screenName
          in: path
          description: Screen name of the twitter user.
          required: true
          type: number
      responses:
        "400":
          description: Invalid ID supplied
        "404":
          description: User not found in trusted users
  "/events/{id}/blockedUsers":
    get:
      summary: Get list of blocked users for the given event
      tags:
        - blocked users
      parameters:
        - name: id
          in: path
          description: ID of the event for which to get the blocked users.
          required: true
          type: string
      responses:
        "200":
          description: An array of blocked users
          schema:
            type: array
            items:
              $ref: "#/definitions/twitterUser"
  "/events/{id}/blockedUsers/{screenName}":
    put:
      summary: Add blocked user
      tags:
        - blocked users
      parameters:
        - name: id
          in: path
          description: ID of the event.
          required: true
          type: string
        - name: screenName
          in: path
          description: screenName of the twitter user.
          required: true
          type: string
      responses:
        "200":
          description: successful operation
    delete:
      tags:
        - blocked users
      operationId: deleteOrder
      parameters:
        - name: id
          in: path
          description: ID of the event for which to get the blocked users.
          required: true
          type: string
        - name: screenName
          in: path
          description: screenName of the twitter user.
          required: true
          type: number
      responses:
        "400":
          description: Invalid ID supplied
        "404":
          description: User not found in blocked users
  "/events/{id}/approvedTweets/{tweetId}":
    post:
      summary: Add approved tweet
      tags:
        - approve/block tweets
      parameters:
        - name: id
          in: path
          description: ID of the event.
          required: true
          type: string
        - name: tweetId
          in: path
          description: ID of the tweet.
          required: true
          type: string
        - name: starred
          in: query
          description: "true or false."
          required: true
          type: string
      responses:
        "200":
          description: successful operation
  "/events/{id}/blockedTweets/{tweetId}":
    post:
      summary: Add blocked tweet
      tags:
        - approve/block tweets
      parameters:
        - name: id
          in: path
          description: ID of the event.
          required: true
          type: string
        - name: tweetId
          in: path
          description: ID of the tweet.
          required: true
          type: string
      responses:
        "200":
          description: successful operation
  "/events/{id}/config":
    get:
      summary: get event config
      tags:
        - event config
      parameters:
        - name: id
          in: path
          description: ID of the event.
          required: true
          type: string
      responses:
        "200":
          description: successful operation
    put:
      summary: get event config.
      tags:
        - event config
      operationId: updateEventConfig
      parameters:
        - name: id
          in: path
          description: ID of the event.
          required: true
          type: string
        - in: body
          name: body
          description: event config object passed as json payload
          required: true
          schema: 
            $ref: "#/definitions/eventConfig"
      responses:
        "200":
          description: successful operation
        "400":
          description: Invalid ID supplied
  "/events/{id}/overTime":
    get:
      summary: Get tweets overtime
      tags:
        - overTime
      parameters:
        - name: id
          in: path
          description: ID of the event for which to get the blocked users.
          required: true
          type: string
        - name: period
          in: query
          type: integer
        - name: sampleRate
          in: query
          type: integer
      responses:
        "200":
          description: An array time and count objects
          schema:
            type: array
            items:
              $ref: "#/definitions/timeObject"
  "/events/{id}/topUsers":
    get:
      summary: Get top users
      tags:
        - topUsers
      parameters:
        - name: id
          in: path
          description: ID of the event for which to get the top users.
          required: true
          type: string
        - name: count
          in: query
          type: integer
      responses:
        "200":
          description: An array of top users
          schema:
            type: array
            items:
              $ref: "#/definitions/twitterUser"
definitions:
  event:
    properties:
      uuid:
        type: string
        description: Unique identifier representing a specific event.
  twitterUser:
    properties:
      twitterId:
        type: number
        description: Unique twitter ID of the user
  timeObject:
    properties:
      time:
        type: string
        description: time string
      tweeetsCount:
        type: number
  eventConfig:
    properties:
      backgroundColor:
        type: string
      screens:
        type: array
        items:
          type: string
      size:
        type: string
  Error:
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      fields:
        type: string
